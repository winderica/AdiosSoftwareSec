[
  "\nvoid CopyIntArray(int *array,int len)\n{\nint* myarray,i;\nmyarray = malloc(len*sizeof(int));\nif(myarray == NULL)\nreturn;\nfor(i=0;i<len;i++)\nmyarray[i] = arrary[i];\n}\n    ",
  "\n    int main(int argc, char* argv[])\n{\nunsigned short total = strlen(argv[1]) + strlen(argv[2]) + 1;\nchar* buffer = (char*)malloc(total);\nstrcpy(buffer, argv[1]);\nstrcat(buffer, argv[2]);\nfree(buffer);\nreturn 0;\n}\n    ",
  "#include<stdio.h>\n#include<stdlib.h>\n\nvoid add(int a[][],int b[][],int c[][],int n){\n  for(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n      c[i][j]=a[i][j]+b[i][j];\n    }\n  }\n}\n\nvoid subtract(int a[][],int b[][],int c[][],int n){\n  for(i=0;i<n;i++){\n    for(j=0;j<n;j++){\n      c[i][j]=a[i][j]-b[i][j];\n    }\n  }\n}\nvoid copying(int a[][],int a11[][],int a12[][],int a21[][],int a22[][],int n){\n  for ( i = 0; i < n/2; i++) {\n\n    \n  }\n}\n\nvoid mult(int a[][],int b[][],int c[][],int n){\n  if(n>2){\n    int l=n/2;\n    int** a11;\n    a11=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           a11[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** a12;\n    a12=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           a12[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** a21;\n    a21=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           a21[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** a22;\n    a22=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           a22[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** b11;\n    b11=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           b11[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** b12;\n    b12=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           b12[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** b21;\n    b21=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           b21[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** b22;\n    b22=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           b22[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m1;\n    m1=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m1[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m2;\n    m2=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m2[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m3;\n    m3=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m3[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m4;\n    m4=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m4[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m5;\n    m5=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m5[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m6;\n    m6=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m6[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** m7;\n    m7=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           m7[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** c11;\n    c11=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           c11[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** c12;\n    c12=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           c12[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** c21;\n    c21=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           c21[i] = (int *)malloc(l * sizeof(int));\n    }\n    int** c22;\n    c22=(int**)malloc(l*sizeof(int*));\n    for (i=0; i<l; i++){\n           c22[i] = (int *)malloc(l * sizeof(int));\n    }\n\n  }\n\n  else if(n==2){\n\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        c[i][j]=0;\n        for (l = 0; l < n; l++) {\n          c[i][j]+=a[i][l]*b[l][j];\n        }\n      }\n    }\n  }\n\n}\n\n\n\nint main(int argc, char *argv[]) {\n  int i,j,l,n;\n  scanf(\"%d\",&n);\n  int **a,**b,**c;\n  a=(int**)malloc(n*sizeof(int*));\n  for (i=0; i<n; i++)\n         a[i] = (int *)malloc(n * sizeof(int));\n  b=(int**)malloc(n*sizeof(int*));\n  for (i=0; i<n; i++)\n         b[i] = (int *)malloc(n * sizeof(int));\n  c=(int**)malloc(n*sizeof(int*));\n  for (i=0; i<n; i++)\n         c[i] = (int *)malloc(n * sizeof(int));\n  printf(\"Now type the matrix\\n\");\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      scanf(\"%d\",&a[i][j] );\n    }\n  }\n  printf(\"Now type second matrix\\n\");\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      scanf(\"%d\",&b[i][j] );\n    }\n  }\n  mult(a,b,c,n);\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      printf(\"%d \",c[i][j] );\n    }\n    printf(\"\\n\");\n  }\n  free(a);\n  free(b);\n  free(c);\n  return 0;\n}"
]
