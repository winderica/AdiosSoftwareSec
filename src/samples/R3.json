[
  "int DES_Encrypt(char *plainFile, char *keyStr,char *cipherFile){\n\t    FILE *plain,*cipher;\n\t    int count;\n\t    ElemType plainBlock[8],cipherBlock[8],keyBlock[8];\n\t    ElemType bKey[64];\n\t    ElemType subKeys[16][48];\n\t    if((plain = fopen(plainFile,\"rb\")) == NULL){\n\t        return PLAIN_FILE_OPEN_ERROR;\n\t    }\n\t    if((cipher = fopen(cipherFile,\"wb\")) == NULL){\n\t        return CIPHER_FILE_OPEN_ERROR;\n\t    }\n\t    //设置密钥\n\t    memcpy(keyBlock,keyStr,8);\n\t    //将密钥转换为二进制流\n\t    Char8ToBit64(keyBlock,bKey);\n\t    //生成子密钥\n\t    DES_MakeSubKeys(bKey,subKeys);\n\n\t    while(!feof(plain)){\n\t        //每次读8个字节，并返回成功读取的字节数\n\t        if((count = fread(plainBlock,sizeof(char),8,plain)) == 8){\n\t            DES_EncryptBlock(plainBlock,subKeys,cipherBlock);\n\t            fwrite(cipherBlock,sizeof(char),8,cipher);\n\t        }\n\t    }\n\t    if(count){\n\t        //填充\n\t        memset(plainBlock + count,'\\0',7 - count);\n\t        //最后一个字符保存包括最后一个字符在内的所填充的字符数量\n\t        plainBlock[7] = 8 - count;\n\t        DES_EncryptBlock(plainBlock,subKeys,cipherBlock);\n\t        fwrite(cipherBlock,sizeof(char),8,cipher);\n\t    }\n\t    fclose(plain);\n\t    fclose(cipher);\n\t    return OK;\n\t}",
  "int DES_Encrypt(char *plainFile, char *keyStr,char *cipherFile){\n\t    ElemType plainBlock[8],cipherBlock[8],keyBlock[8];\n\t    ElemType bKey[64];\n\t    ElemType subKeys[16][48];\n\t    FILE *plain,*cipher;\n\t    int count;\n\t    if((plain = fopen(plainFile,\"rb\")) == NULL){\n\t  return PLAIN_FILE_OPEN_ERROR; }\n\t    if((cipher = fopen(cipherFile,\"wb\")) == NULL){\n\t        return CIPHER_FILE_OPEN_ERROR;\n\t    }  //设置密钥\n\n\t    memcpy(keyBlock,keyStr,8);  //将密钥转换为二进制流\n\t    Char8ToBit64(keyBlock,bKey);   //生成子密钥\n\t    DES_MakeSubKeys(bKey,subKeys);\n\n\t    while(!feof(plain)){\n\t        //每次读8个字节，并返回成功读取的字节数\n\t        if((count = fread(plainBlock,sizeof(char),8,plain)) == 8){\n\t            DES_EncryptBlock(plainBlock,subKeys,cipherBlock);\n\t            fwrite(cipherBlock,sizeof(char),8,cipher);\n\t        }\n\t    }\n\t    if(count){\n\t        //填充\n\t        memset(plainBlock + count,'\\0',7 - count);\n\t    //最后一个字符保存包括最后一个字符在内的所填充的字符数量\n\t        plainBlock[7] = 8 - count;\n\t        DES_EncryptBlock(plainBlock,subKeys,cipherBlock);\n\t        fwrite(cipherBlock,sizeof(char),8,cipher);\n\t    }\n\t    fclose(plain);\n\t    fclose(cipher);\n\t return OK;\n\t}",
  "int main()\n{\n\t\tint a,b,c;\n\t\ta=func_A(a);\n\t\tb=func_B(b);\n\t\tc=a+b;\n      return func_C(c);\n}\n",
  "\tint main(){\n\t\t\tint d,e,f; \n\t    e=func_B(e); // calculate e\n\t\t\td=func_A(d); // calculate d\n\t\tf=d+e;\n   return func_C(f); // calculate the final result\n\n}\n"
]
